#!/usr/bin/env bash
# Set the AWS environment for CLI usage using environment variables
# To run: eval $(awsnev <aws_profile_name>)

# AWS CLI
# Valid options for AWS_DEFAULT_OUTPUT:
# json: good for processing with `jq`
# text: (recommended with --query option) good for processing with *nix tools (tab-delimited)
# table: can be a bit more human readable
: ${AWS_CONFIG_FILE:="~/.aws/config"}
: ${AWS_DEFAULT_OUTPUT:="text"}
: ${AWS_DEFAULT_REGION:="us-east-1"}

export AWS_CONFIG_FILE
export AWS_DEFAULT_OUTPUT
export AWS_DEFAULT_REGION

: ${AWS_CREDENTIAL_FILE:="~/.aws/credentials"}

export AWS_CREDENTIAL_FILE

# Read from the files to set the environment using profiles if provided
awsCreds=( $(awk -F ' *= *' '{ if ($1 ~ /^\[/) section=$1; else if ($1 !~ /^$/) print section "=" $1 "=" "" $2 "" }' ${AWS_CREDENTIAL_FILE} | grep -v "##") )
for rl in "${awsCreds[@]}"; do
  profile=$(echo "${rl}" | cut -d"=" -f1)
  if [ ["${1}"] == "${profile}" ]; then
    key=$(echo "${rl}" | cut -d"=" -f2)
    value=$(echo "${rl}" | cut -d"=" -f3)
    if [[ "aws_access_key_id" == ${key} ]]; then
      echo export AWS_ACCESS_KEY_ID=${value}
    elif [[ "aws_secret_access_key" == ${key} ]]; then
      echo export AWS_SECRET_ACCESS_KEY=${value}
      echo export AWS_PROFILE=${1}
    fi
  fi
done
